/* 
 * Provisioning API
 *
 * The provisioning service will be used to create objects in configuration server in a way that is consistent with the BEC model. The \"users\" resource will be used to perform CRUD operations on config server person objects. Note that this API will extend the low level configuration server API to add additional functionality that will allow persons to be created in a way that makes them immediately useable in BEC. Operations on this resource may result in other configuration objects being modified as well. 
 *
 * OpenAPI spec version: 9.0.000.22.2423
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using RestSharp;
using Genesys.Internal.Provisioning.Client;
using Genesys.Internal.Provisioning.Model;

namespace Genesys.Internal.Provisioning.Api
{
    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IObjectsApi : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// Get DNs or agent groups.
        /// </summary>
        /// <remarks>
        /// Get DNs (directory numbers) or agent groups from Configuration Server with the specified filters.
        /// </remarks>
        /// <exception cref="Genesys.Internal.Provisioning.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="objectType">The type of object. Possible values are dns, skills, dn-groups or agent-groups.</param>
        /// <param name="dnType">If the object_type is &#39;dns&#39;, then you need to specify the DN type (for example, CFGRoutingPoint). For possible values, see [CfgDNType](https://docs.genesys.com/Documentation/PSDK/9.0.x/ConfigLayerRef/CfgDNType) in the Platform SDK documentation.  (optional)</param>
        /// <param name="dnGroups">If the object_type is &#39;dns&#39;, may contain a list of DN group names to filter DNs. (optional)</param>
        /// <param name="groupType">If the object_type is &#39;agent-groups&#39;, then you need to specify the agent group type. (optional)</param>
        /// <param name="limit">The number of objects the Provisioning API should return. (optional)</param>
        /// <param name="offset">The number of matches the Provisioning API should skip in the returned objects. (optional)</param>
        /// <param name="searchTerm">The term that you want to search for in the object keys. The Provisioning API searches for the this term in the value of the key you specify in &#39;search_key&#39;.  (optional)</param>
        /// <param name="searchKey">The key you want the Provisioning API to use when searching for the term you specified in &#39;search_term&#39;. You can find valid key names in the Platform SDK documentation for [CfgDN](https://docs.genesys.com/Documentation/PSDK/9.0.x/ConfigLayerRef/CfgDN) and [CfgAgentGroup](https://docs.genesys.com/Documentation/PSDK/latest/ConfigLayerRef/CfgAgentGroup).  (optional)</param>
        /// <param name="matchMethod">The method the Provisioning API should use to match the &#39;search_term&#39;. Possible values are includes, startsWith, endsWith, and isEqual.  (optional, default to includes)</param>
        /// <param name="sortKey">A key in [CfgDN](https://docs.genesys.com/Documentation/PSDK/9.0.x/ConfigLayerRef/CfgDN), [CfgSkill](https://docs.genesys.com/Documentation/PSDK/9.0.x/ConfigLayerRef/CfgSkill) or [CfgAgentGroup](https://docs.genesys.com/Documentation/PSDK/latest/ConfigLayerRef/CfgAgentGroup) to sort the search results.  (optional)</param>
        /// <param name="sortAscending">Specifies whether to sort the search results in ascending or descending order.  (optional, default to true)</param>
        /// <param name="sortMethod">Specifies the sort method. Possible values are caseSensitive, caseInsensitive or numeric.  (optional, default to caseSensitive)</param>
        /// <param name="dbids">Comma-separated list of DNs to be fetched.  (optional)</param>
        /// <param name="inUse">Specifies whether to return only skills actually assigned to agents.  (optional, default to false)</param>
        /// <returns>GetObjectsSuccessResponse</returns>
        GetObjectsSuccessResponse GetObject (string objectType, string dnType = null, List<string> dnGroups = null, string groupType = null, int? limit = null, int? offset = null, string searchTerm = null, string searchKey = null, string matchMethod = null, string sortKey = null, bool? sortAscending = null, string sortMethod = null, string dbids = null, bool? inUse = null);

        /// <summary>
        /// Get DNs or agent groups.
        /// </summary>
        /// <remarks>
        /// Get DNs (directory numbers) or agent groups from Configuration Server with the specified filters.
        /// </remarks>
        /// <exception cref="Genesys.Internal.Provisioning.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="objectType">The type of object. Possible values are dns, skills, dn-groups or agent-groups.</param>
        /// <param name="dnType">If the object_type is &#39;dns&#39;, then you need to specify the DN type (for example, CFGRoutingPoint). For possible values, see [CfgDNType](https://docs.genesys.com/Documentation/PSDK/9.0.x/ConfigLayerRef/CfgDNType) in the Platform SDK documentation.  (optional)</param>
        /// <param name="dnGroups">If the object_type is &#39;dns&#39;, may contain a list of DN group names to filter DNs. (optional)</param>
        /// <param name="groupType">If the object_type is &#39;agent-groups&#39;, then you need to specify the agent group type. (optional)</param>
        /// <param name="limit">The number of objects the Provisioning API should return. (optional)</param>
        /// <param name="offset">The number of matches the Provisioning API should skip in the returned objects. (optional)</param>
        /// <param name="searchTerm">The term that you want to search for in the object keys. The Provisioning API searches for the this term in the value of the key you specify in &#39;search_key&#39;.  (optional)</param>
        /// <param name="searchKey">The key you want the Provisioning API to use when searching for the term you specified in &#39;search_term&#39;. You can find valid key names in the Platform SDK documentation for [CfgDN](https://docs.genesys.com/Documentation/PSDK/9.0.x/ConfigLayerRef/CfgDN) and [CfgAgentGroup](https://docs.genesys.com/Documentation/PSDK/latest/ConfigLayerRef/CfgAgentGroup).  (optional)</param>
        /// <param name="matchMethod">The method the Provisioning API should use to match the &#39;search_term&#39;. Possible values are includes, startsWith, endsWith, and isEqual.  (optional, default to includes)</param>
        /// <param name="sortKey">A key in [CfgDN](https://docs.genesys.com/Documentation/PSDK/9.0.x/ConfigLayerRef/CfgDN), [CfgSkill](https://docs.genesys.com/Documentation/PSDK/9.0.x/ConfigLayerRef/CfgSkill) or [CfgAgentGroup](https://docs.genesys.com/Documentation/PSDK/latest/ConfigLayerRef/CfgAgentGroup) to sort the search results.  (optional)</param>
        /// <param name="sortAscending">Specifies whether to sort the search results in ascending or descending order.  (optional, default to true)</param>
        /// <param name="sortMethod">Specifies the sort method. Possible values are caseSensitive, caseInsensitive or numeric.  (optional, default to caseSensitive)</param>
        /// <param name="dbids">Comma-separated list of DNs to be fetched.  (optional)</param>
        /// <param name="inUse">Specifies whether to return only skills actually assigned to agents.  (optional, default to false)</param>
        /// <returns>ApiResponse of GetObjectsSuccessResponse</returns>
        ApiResponse<GetObjectsSuccessResponse> GetObjectWithHttpInfo (string objectType, string dnType = null, List<string> dnGroups = null, string groupType = null, int? limit = null, int? offset = null, string searchTerm = null, string searchKey = null, string matchMethod = null, string sortKey = null, bool? sortAscending = null, string sortMethod = null, string dbids = null, bool? inUse = null);
        #endregion Synchronous Operations
        #region Asynchronous Operations
        /// <summary>
        /// Get DNs or agent groups.
        /// </summary>
        /// <remarks>
        /// Get DNs (directory numbers) or agent groups from Configuration Server with the specified filters.
        /// </remarks>
        /// <exception cref="Genesys.Internal.Provisioning.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="objectType">The type of object. Possible values are dns, skills, dn-groups or agent-groups.</param>
        /// <param name="dnType">If the object_type is &#39;dns&#39;, then you need to specify the DN type (for example, CFGRoutingPoint). For possible values, see [CfgDNType](https://docs.genesys.com/Documentation/PSDK/9.0.x/ConfigLayerRef/CfgDNType) in the Platform SDK documentation.  (optional)</param>
        /// <param name="dnGroups">If the object_type is &#39;dns&#39;, may contain a list of DN group names to filter DNs. (optional)</param>
        /// <param name="groupType">If the object_type is &#39;agent-groups&#39;, then you need to specify the agent group type. (optional)</param>
        /// <param name="limit">The number of objects the Provisioning API should return. (optional)</param>
        /// <param name="offset">The number of matches the Provisioning API should skip in the returned objects. (optional)</param>
        /// <param name="searchTerm">The term that you want to search for in the object keys. The Provisioning API searches for the this term in the value of the key you specify in &#39;search_key&#39;.  (optional)</param>
        /// <param name="searchKey">The key you want the Provisioning API to use when searching for the term you specified in &#39;search_term&#39;. You can find valid key names in the Platform SDK documentation for [CfgDN](https://docs.genesys.com/Documentation/PSDK/9.0.x/ConfigLayerRef/CfgDN) and [CfgAgentGroup](https://docs.genesys.com/Documentation/PSDK/latest/ConfigLayerRef/CfgAgentGroup).  (optional)</param>
        /// <param name="matchMethod">The method the Provisioning API should use to match the &#39;search_term&#39;. Possible values are includes, startsWith, endsWith, and isEqual.  (optional, default to includes)</param>
        /// <param name="sortKey">A key in [CfgDN](https://docs.genesys.com/Documentation/PSDK/9.0.x/ConfigLayerRef/CfgDN), [CfgSkill](https://docs.genesys.com/Documentation/PSDK/9.0.x/ConfigLayerRef/CfgSkill) or [CfgAgentGroup](https://docs.genesys.com/Documentation/PSDK/latest/ConfigLayerRef/CfgAgentGroup) to sort the search results.  (optional)</param>
        /// <param name="sortAscending">Specifies whether to sort the search results in ascending or descending order.  (optional, default to true)</param>
        /// <param name="sortMethod">Specifies the sort method. Possible values are caseSensitive, caseInsensitive or numeric.  (optional, default to caseSensitive)</param>
        /// <param name="dbids">Comma-separated list of DNs to be fetched.  (optional)</param>
        /// <param name="inUse">Specifies whether to return only skills actually assigned to agents.  (optional, default to false)</param>
        /// <returns>Task of GetObjectsSuccessResponse</returns>
        System.Threading.Tasks.Task<GetObjectsSuccessResponse> GetObjectAsync (string objectType, string dnType = null, List<string> dnGroups = null, string groupType = null, int? limit = null, int? offset = null, string searchTerm = null, string searchKey = null, string matchMethod = null, string sortKey = null, bool? sortAscending = null, string sortMethod = null, string dbids = null, bool? inUse = null);

        /// <summary>
        /// Get DNs or agent groups.
        /// </summary>
        /// <remarks>
        /// Get DNs (directory numbers) or agent groups from Configuration Server with the specified filters.
        /// </remarks>
        /// <exception cref="Genesys.Internal.Provisioning.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="objectType">The type of object. Possible values are dns, skills, dn-groups or agent-groups.</param>
        /// <param name="dnType">If the object_type is &#39;dns&#39;, then you need to specify the DN type (for example, CFGRoutingPoint). For possible values, see [CfgDNType](https://docs.genesys.com/Documentation/PSDK/9.0.x/ConfigLayerRef/CfgDNType) in the Platform SDK documentation.  (optional)</param>
        /// <param name="dnGroups">If the object_type is &#39;dns&#39;, may contain a list of DN group names to filter DNs. (optional)</param>
        /// <param name="groupType">If the object_type is &#39;agent-groups&#39;, then you need to specify the agent group type. (optional)</param>
        /// <param name="limit">The number of objects the Provisioning API should return. (optional)</param>
        /// <param name="offset">The number of matches the Provisioning API should skip in the returned objects. (optional)</param>
        /// <param name="searchTerm">The term that you want to search for in the object keys. The Provisioning API searches for the this term in the value of the key you specify in &#39;search_key&#39;.  (optional)</param>
        /// <param name="searchKey">The key you want the Provisioning API to use when searching for the term you specified in &#39;search_term&#39;. You can find valid key names in the Platform SDK documentation for [CfgDN](https://docs.genesys.com/Documentation/PSDK/9.0.x/ConfigLayerRef/CfgDN) and [CfgAgentGroup](https://docs.genesys.com/Documentation/PSDK/latest/ConfigLayerRef/CfgAgentGroup).  (optional)</param>
        /// <param name="matchMethod">The method the Provisioning API should use to match the &#39;search_term&#39;. Possible values are includes, startsWith, endsWith, and isEqual.  (optional, default to includes)</param>
        /// <param name="sortKey">A key in [CfgDN](https://docs.genesys.com/Documentation/PSDK/9.0.x/ConfigLayerRef/CfgDN), [CfgSkill](https://docs.genesys.com/Documentation/PSDK/9.0.x/ConfigLayerRef/CfgSkill) or [CfgAgentGroup](https://docs.genesys.com/Documentation/PSDK/latest/ConfigLayerRef/CfgAgentGroup) to sort the search results.  (optional)</param>
        /// <param name="sortAscending">Specifies whether to sort the search results in ascending or descending order.  (optional, default to true)</param>
        /// <param name="sortMethod">Specifies the sort method. Possible values are caseSensitive, caseInsensitive or numeric.  (optional, default to caseSensitive)</param>
        /// <param name="dbids">Comma-separated list of DNs to be fetched.  (optional)</param>
        /// <param name="inUse">Specifies whether to return only skills actually assigned to agents.  (optional, default to false)</param>
        /// <returns>Task of ApiResponse (GetObjectsSuccessResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<GetObjectsSuccessResponse>> GetObjectAsyncWithHttpInfo (string objectType, string dnType = null, List<string> dnGroups = null, string groupType = null, int? limit = null, int? offset = null, string searchTerm = null, string searchKey = null, string matchMethod = null, string sortKey = null, bool? sortAscending = null, string sortMethod = null, string dbids = null, bool? inUse = null);
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class ObjectsApi : IObjectsApi
    {
        private Genesys.Internal.Provisioning.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="ObjectsApi"/> class.
        /// </summary>
        /// <returns></returns>
        public ObjectsApi(String basePath)
        {
            this.Configuration = new Configuration { BasePath = basePath };

            ExceptionFactory = Genesys.Internal.Provisioning.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ObjectsApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public ObjectsApi(Configuration configuration = null)
        {
            if (configuration == null) // use the default one in Configuration
                this.Configuration = Configuration.Default;
            else
                this.Configuration = configuration;

            ExceptionFactory = Genesys.Internal.Provisioning.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public String GetBasePath()
        {
            return this.Configuration.ApiClient.RestClient.BaseUrl.ToString();
        }

        /// <summary>
        /// Sets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        [Obsolete("SetBasePath is deprecated, please do 'Configuration.ApiClient = new ApiClient(\"http://new-path\")' instead.")]
        public void SetBasePath(String basePath)
        {
            // do nothing
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public Configuration Configuration {get; set;}

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public Genesys.Internal.Provisioning.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// Gets the default header.
        /// </summary>
        /// <returns>Dictionary of HTTP header</returns>
        [Obsolete("DefaultHeader is deprecated, please use Configuration.DefaultHeader instead.")]
        public IDictionary<String, String> DefaultHeader()
        {
            return new ReadOnlyDictionary<string, string>(this.Configuration.DefaultHeader);
        }

        /// <summary>
        /// Add default header.
        /// </summary>
        /// <param name="key">Header field name.</param>
        /// <param name="value">Header field value.</param>
        /// <returns></returns>
        [Obsolete("AddDefaultHeader is deprecated, please use Configuration.AddDefaultHeader instead.")]
        public void AddDefaultHeader(string key, string value)
        {
            this.Configuration.AddDefaultHeader(key, value);
        }

        /// <summary>
        /// Get DNs or agent groups. Get DNs (directory numbers) or agent groups from Configuration Server with the specified filters.
        /// </summary>
        /// <exception cref="Genesys.Internal.Provisioning.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="objectType">The type of object. Possible values are dns, skills, dn-groups or agent-groups.</param>
        /// <param name="dnType">If the object_type is &#39;dns&#39;, then you need to specify the DN type (for example, CFGRoutingPoint). For possible values, see [CfgDNType](https://docs.genesys.com/Documentation/PSDK/9.0.x/ConfigLayerRef/CfgDNType) in the Platform SDK documentation.  (optional)</param>
        /// <param name="dnGroups">If the object_type is &#39;dns&#39;, may contain a list of DN group names to filter DNs. (optional)</param>
        /// <param name="groupType">If the object_type is &#39;agent-groups&#39;, then you need to specify the agent group type. (optional)</param>
        /// <param name="limit">The number of objects the Provisioning API should return. (optional)</param>
        /// <param name="offset">The number of matches the Provisioning API should skip in the returned objects. (optional)</param>
        /// <param name="searchTerm">The term that you want to search for in the object keys. The Provisioning API searches for the this term in the value of the key you specify in &#39;search_key&#39;.  (optional)</param>
        /// <param name="searchKey">The key you want the Provisioning API to use when searching for the term you specified in &#39;search_term&#39;. You can find valid key names in the Platform SDK documentation for [CfgDN](https://docs.genesys.com/Documentation/PSDK/9.0.x/ConfigLayerRef/CfgDN) and [CfgAgentGroup](https://docs.genesys.com/Documentation/PSDK/latest/ConfigLayerRef/CfgAgentGroup).  (optional)</param>
        /// <param name="matchMethod">The method the Provisioning API should use to match the &#39;search_term&#39;. Possible values are includes, startsWith, endsWith, and isEqual.  (optional, default to includes)</param>
        /// <param name="sortKey">A key in [CfgDN](https://docs.genesys.com/Documentation/PSDK/9.0.x/ConfigLayerRef/CfgDN), [CfgSkill](https://docs.genesys.com/Documentation/PSDK/9.0.x/ConfigLayerRef/CfgSkill) or [CfgAgentGroup](https://docs.genesys.com/Documentation/PSDK/latest/ConfigLayerRef/CfgAgentGroup) to sort the search results.  (optional)</param>
        /// <param name="sortAscending">Specifies whether to sort the search results in ascending or descending order.  (optional, default to true)</param>
        /// <param name="sortMethod">Specifies the sort method. Possible values are caseSensitive, caseInsensitive or numeric.  (optional, default to caseSensitive)</param>
        /// <param name="dbids">Comma-separated list of DNs to be fetched.  (optional)</param>
        /// <param name="inUse">Specifies whether to return only skills actually assigned to agents.  (optional, default to false)</param>
        /// <returns>GetObjectsSuccessResponse</returns>
        public GetObjectsSuccessResponse GetObject (string objectType, string dnType = null, List<string> dnGroups = null, string groupType = null, int? limit = null, int? offset = null, string searchTerm = null, string searchKey = null, string matchMethod = null, string sortKey = null, bool? sortAscending = null, string sortMethod = null, string dbids = null, bool? inUse = null)
        {
             ApiResponse<GetObjectsSuccessResponse> localVarResponse = GetObjectWithHttpInfo(objectType, dnType, dnGroups, groupType, limit, offset, searchTerm, searchKey, matchMethod, sortKey, sortAscending, sortMethod, dbids, inUse);
             return localVarResponse.Data;
        }

        /// <summary>
        /// Get DNs or agent groups. Get DNs (directory numbers) or agent groups from Configuration Server with the specified filters.
        /// </summary>
        /// <exception cref="Genesys.Internal.Provisioning.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="objectType">The type of object. Possible values are dns, skills, dn-groups or agent-groups.</param>
        /// <param name="dnType">If the object_type is &#39;dns&#39;, then you need to specify the DN type (for example, CFGRoutingPoint). For possible values, see [CfgDNType](https://docs.genesys.com/Documentation/PSDK/9.0.x/ConfigLayerRef/CfgDNType) in the Platform SDK documentation.  (optional)</param>
        /// <param name="dnGroups">If the object_type is &#39;dns&#39;, may contain a list of DN group names to filter DNs. (optional)</param>
        /// <param name="groupType">If the object_type is &#39;agent-groups&#39;, then you need to specify the agent group type. (optional)</param>
        /// <param name="limit">The number of objects the Provisioning API should return. (optional)</param>
        /// <param name="offset">The number of matches the Provisioning API should skip in the returned objects. (optional)</param>
        /// <param name="searchTerm">The term that you want to search for in the object keys. The Provisioning API searches for the this term in the value of the key you specify in &#39;search_key&#39;.  (optional)</param>
        /// <param name="searchKey">The key you want the Provisioning API to use when searching for the term you specified in &#39;search_term&#39;. You can find valid key names in the Platform SDK documentation for [CfgDN](https://docs.genesys.com/Documentation/PSDK/9.0.x/ConfigLayerRef/CfgDN) and [CfgAgentGroup](https://docs.genesys.com/Documentation/PSDK/latest/ConfigLayerRef/CfgAgentGroup).  (optional)</param>
        /// <param name="matchMethod">The method the Provisioning API should use to match the &#39;search_term&#39;. Possible values are includes, startsWith, endsWith, and isEqual.  (optional, default to includes)</param>
        /// <param name="sortKey">A key in [CfgDN](https://docs.genesys.com/Documentation/PSDK/9.0.x/ConfigLayerRef/CfgDN), [CfgSkill](https://docs.genesys.com/Documentation/PSDK/9.0.x/ConfigLayerRef/CfgSkill) or [CfgAgentGroup](https://docs.genesys.com/Documentation/PSDK/latest/ConfigLayerRef/CfgAgentGroup) to sort the search results.  (optional)</param>
        /// <param name="sortAscending">Specifies whether to sort the search results in ascending or descending order.  (optional, default to true)</param>
        /// <param name="sortMethod">Specifies the sort method. Possible values are caseSensitive, caseInsensitive or numeric.  (optional, default to caseSensitive)</param>
        /// <param name="dbids">Comma-separated list of DNs to be fetched.  (optional)</param>
        /// <param name="inUse">Specifies whether to return only skills actually assigned to agents.  (optional, default to false)</param>
        /// <returns>ApiResponse of GetObjectsSuccessResponse</returns>
        public ApiResponse< GetObjectsSuccessResponse > GetObjectWithHttpInfo (string objectType, string dnType = null, List<string> dnGroups = null, string groupType = null, int? limit = null, int? offset = null, string searchTerm = null, string searchKey = null, string matchMethod = null, string sortKey = null, bool? sortAscending = null, string sortMethod = null, string dbids = null, bool? inUse = null)
        {
            // verify the required parameter 'objectType' is set
            if (objectType == null)
                throw new ApiException(400, "Missing required parameter 'objectType' when calling ObjectsApi->GetObject");

            var localVarPath = "/objects/{object_type}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json"
            };
            String localVarHttpContentType = Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (objectType != null) localVarPathParams.Add("object_type", Configuration.ApiClient.ParameterToString(objectType)); // path parameter
            if (dnType != null) localVarQueryParams.AddRange(Configuration.ApiClient.ParameterToKeyValuePairs("", "dn_type", dnType)); // query parameter
            if (dnGroups != null) localVarQueryParams.AddRange(Configuration.ApiClient.ParameterToKeyValuePairs("csv", "dn_groups", dnGroups)); // query parameter
            if (groupType != null) localVarQueryParams.AddRange(Configuration.ApiClient.ParameterToKeyValuePairs("", "group_type", groupType)); // query parameter
            if (limit != null) localVarQueryParams.AddRange(Configuration.ApiClient.ParameterToKeyValuePairs("", "limit", limit)); // query parameter
            if (offset != null) localVarQueryParams.AddRange(Configuration.ApiClient.ParameterToKeyValuePairs("", "offset", offset)); // query parameter
            if (searchTerm != null) localVarQueryParams.AddRange(Configuration.ApiClient.ParameterToKeyValuePairs("", "search_term", searchTerm)); // query parameter
            if (searchKey != null) localVarQueryParams.AddRange(Configuration.ApiClient.ParameterToKeyValuePairs("", "search_key", searchKey)); // query parameter
            if (matchMethod != null) localVarQueryParams.AddRange(Configuration.ApiClient.ParameterToKeyValuePairs("", "match_method", matchMethod)); // query parameter
            if (sortKey != null) localVarQueryParams.AddRange(Configuration.ApiClient.ParameterToKeyValuePairs("", "sort_key", sortKey)); // query parameter
            if (sortAscending != null) localVarQueryParams.AddRange(Configuration.ApiClient.ParameterToKeyValuePairs("", "sort_ascending", sortAscending)); // query parameter
            if (sortMethod != null) localVarQueryParams.AddRange(Configuration.ApiClient.ParameterToKeyValuePairs("", "sort_method", sortMethod)); // query parameter
            if (dbids != null) localVarQueryParams.AddRange(Configuration.ApiClient.ParameterToKeyValuePairs("", "dbids", dbids)); // query parameter
            if (inUse != null) localVarQueryParams.AddRange(Configuration.ApiClient.ParameterToKeyValuePairs("", "in_use", inUse)); // query parameter


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) Configuration.ApiClient.CallApi(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("GetObject", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<GetObjectsSuccessResponse>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => x.Value.ToString()),
                (GetObjectsSuccessResponse) Configuration.ApiClient.Deserialize(localVarResponse, typeof(GetObjectsSuccessResponse)));
        }

        /// <summary>
        /// Get DNs or agent groups. Get DNs (directory numbers) or agent groups from Configuration Server with the specified filters.
        /// </summary>
        /// <exception cref="Genesys.Internal.Provisioning.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="objectType">The type of object. Possible values are dns, skills, dn-groups or agent-groups.</param>
        /// <param name="dnType">If the object_type is &#39;dns&#39;, then you need to specify the DN type (for example, CFGRoutingPoint). For possible values, see [CfgDNType](https://docs.genesys.com/Documentation/PSDK/9.0.x/ConfigLayerRef/CfgDNType) in the Platform SDK documentation.  (optional)</param>
        /// <param name="dnGroups">If the object_type is &#39;dns&#39;, may contain a list of DN group names to filter DNs. (optional)</param>
        /// <param name="groupType">If the object_type is &#39;agent-groups&#39;, then you need to specify the agent group type. (optional)</param>
        /// <param name="limit">The number of objects the Provisioning API should return. (optional)</param>
        /// <param name="offset">The number of matches the Provisioning API should skip in the returned objects. (optional)</param>
        /// <param name="searchTerm">The term that you want to search for in the object keys. The Provisioning API searches for the this term in the value of the key you specify in &#39;search_key&#39;.  (optional)</param>
        /// <param name="searchKey">The key you want the Provisioning API to use when searching for the term you specified in &#39;search_term&#39;. You can find valid key names in the Platform SDK documentation for [CfgDN](https://docs.genesys.com/Documentation/PSDK/9.0.x/ConfigLayerRef/CfgDN) and [CfgAgentGroup](https://docs.genesys.com/Documentation/PSDK/latest/ConfigLayerRef/CfgAgentGroup).  (optional)</param>
        /// <param name="matchMethod">The method the Provisioning API should use to match the &#39;search_term&#39;. Possible values are includes, startsWith, endsWith, and isEqual.  (optional, default to includes)</param>
        /// <param name="sortKey">A key in [CfgDN](https://docs.genesys.com/Documentation/PSDK/9.0.x/ConfigLayerRef/CfgDN), [CfgSkill](https://docs.genesys.com/Documentation/PSDK/9.0.x/ConfigLayerRef/CfgSkill) or [CfgAgentGroup](https://docs.genesys.com/Documentation/PSDK/latest/ConfigLayerRef/CfgAgentGroup) to sort the search results.  (optional)</param>
        /// <param name="sortAscending">Specifies whether to sort the search results in ascending or descending order.  (optional, default to true)</param>
        /// <param name="sortMethod">Specifies the sort method. Possible values are caseSensitive, caseInsensitive or numeric.  (optional, default to caseSensitive)</param>
        /// <param name="dbids">Comma-separated list of DNs to be fetched.  (optional)</param>
        /// <param name="inUse">Specifies whether to return only skills actually assigned to agents.  (optional, default to false)</param>
        /// <returns>Task of GetObjectsSuccessResponse</returns>
        public async System.Threading.Tasks.Task<GetObjectsSuccessResponse> GetObjectAsync (string objectType, string dnType = null, List<string> dnGroups = null, string groupType = null, int? limit = null, int? offset = null, string searchTerm = null, string searchKey = null, string matchMethod = null, string sortKey = null, bool? sortAscending = null, string sortMethod = null, string dbids = null, bool? inUse = null)
        {
             ApiResponse<GetObjectsSuccessResponse> localVarResponse = await GetObjectAsyncWithHttpInfo(objectType, dnType, dnGroups, groupType, limit, offset, searchTerm, searchKey, matchMethod, sortKey, sortAscending, sortMethod, dbids, inUse);
             return localVarResponse.Data;

        }

        /// <summary>
        /// Get DNs or agent groups. Get DNs (directory numbers) or agent groups from Configuration Server with the specified filters.
        /// </summary>
        /// <exception cref="Genesys.Internal.Provisioning.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="objectType">The type of object. Possible values are dns, skills, dn-groups or agent-groups.</param>
        /// <param name="dnType">If the object_type is &#39;dns&#39;, then you need to specify the DN type (for example, CFGRoutingPoint). For possible values, see [CfgDNType](https://docs.genesys.com/Documentation/PSDK/9.0.x/ConfigLayerRef/CfgDNType) in the Platform SDK documentation.  (optional)</param>
        /// <param name="dnGroups">If the object_type is &#39;dns&#39;, may contain a list of DN group names to filter DNs. (optional)</param>
        /// <param name="groupType">If the object_type is &#39;agent-groups&#39;, then you need to specify the agent group type. (optional)</param>
        /// <param name="limit">The number of objects the Provisioning API should return. (optional)</param>
        /// <param name="offset">The number of matches the Provisioning API should skip in the returned objects. (optional)</param>
        /// <param name="searchTerm">The term that you want to search for in the object keys. The Provisioning API searches for the this term in the value of the key you specify in &#39;search_key&#39;.  (optional)</param>
        /// <param name="searchKey">The key you want the Provisioning API to use when searching for the term you specified in &#39;search_term&#39;. You can find valid key names in the Platform SDK documentation for [CfgDN](https://docs.genesys.com/Documentation/PSDK/9.0.x/ConfigLayerRef/CfgDN) and [CfgAgentGroup](https://docs.genesys.com/Documentation/PSDK/latest/ConfigLayerRef/CfgAgentGroup).  (optional)</param>
        /// <param name="matchMethod">The method the Provisioning API should use to match the &#39;search_term&#39;. Possible values are includes, startsWith, endsWith, and isEqual.  (optional, default to includes)</param>
        /// <param name="sortKey">A key in [CfgDN](https://docs.genesys.com/Documentation/PSDK/9.0.x/ConfigLayerRef/CfgDN), [CfgSkill](https://docs.genesys.com/Documentation/PSDK/9.0.x/ConfigLayerRef/CfgSkill) or [CfgAgentGroup](https://docs.genesys.com/Documentation/PSDK/latest/ConfigLayerRef/CfgAgentGroup) to sort the search results.  (optional)</param>
        /// <param name="sortAscending">Specifies whether to sort the search results in ascending or descending order.  (optional, default to true)</param>
        /// <param name="sortMethod">Specifies the sort method. Possible values are caseSensitive, caseInsensitive or numeric.  (optional, default to caseSensitive)</param>
        /// <param name="dbids">Comma-separated list of DNs to be fetched.  (optional)</param>
        /// <param name="inUse">Specifies whether to return only skills actually assigned to agents.  (optional, default to false)</param>
        /// <returns>Task of ApiResponse (GetObjectsSuccessResponse)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<GetObjectsSuccessResponse>> GetObjectAsyncWithHttpInfo (string objectType, string dnType = null, List<string> dnGroups = null, string groupType = null, int? limit = null, int? offset = null, string searchTerm = null, string searchKey = null, string matchMethod = null, string sortKey = null, bool? sortAscending = null, string sortMethod = null, string dbids = null, bool? inUse = null)
        {
            // verify the required parameter 'objectType' is set
            if (objectType == null)
                throw new ApiException(400, "Missing required parameter 'objectType' when calling ObjectsApi->GetObject");

            var localVarPath = "/objects/{object_type}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json"
            };
            String localVarHttpContentType = Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (objectType != null) localVarPathParams.Add("object_type", Configuration.ApiClient.ParameterToString(objectType)); // path parameter
            if (dnType != null) localVarQueryParams.AddRange(Configuration.ApiClient.ParameterToKeyValuePairs("", "dn_type", dnType)); // query parameter
            if (dnGroups != null) localVarQueryParams.AddRange(Configuration.ApiClient.ParameterToKeyValuePairs("csv", "dn_groups", dnGroups)); // query parameter
            if (groupType != null) localVarQueryParams.AddRange(Configuration.ApiClient.ParameterToKeyValuePairs("", "group_type", groupType)); // query parameter
            if (limit != null) localVarQueryParams.AddRange(Configuration.ApiClient.ParameterToKeyValuePairs("", "limit", limit)); // query parameter
            if (offset != null) localVarQueryParams.AddRange(Configuration.ApiClient.ParameterToKeyValuePairs("", "offset", offset)); // query parameter
            if (searchTerm != null) localVarQueryParams.AddRange(Configuration.ApiClient.ParameterToKeyValuePairs("", "search_term", searchTerm)); // query parameter
            if (searchKey != null) localVarQueryParams.AddRange(Configuration.ApiClient.ParameterToKeyValuePairs("", "search_key", searchKey)); // query parameter
            if (matchMethod != null) localVarQueryParams.AddRange(Configuration.ApiClient.ParameterToKeyValuePairs("", "match_method", matchMethod)); // query parameter
            if (sortKey != null) localVarQueryParams.AddRange(Configuration.ApiClient.ParameterToKeyValuePairs("", "sort_key", sortKey)); // query parameter
            if (sortAscending != null) localVarQueryParams.AddRange(Configuration.ApiClient.ParameterToKeyValuePairs("", "sort_ascending", sortAscending)); // query parameter
            if (sortMethod != null) localVarQueryParams.AddRange(Configuration.ApiClient.ParameterToKeyValuePairs("", "sort_method", sortMethod)); // query parameter
            if (dbids != null) localVarQueryParams.AddRange(Configuration.ApiClient.ParameterToKeyValuePairs("", "dbids", dbids)); // query parameter
            if (inUse != null) localVarQueryParams.AddRange(Configuration.ApiClient.ParameterToKeyValuePairs("", "in_use", inUse)); // query parameter


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("GetObject", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<GetObjectsSuccessResponse>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => x.Value.ToString()),
                (GetObjectsSuccessResponse) Configuration.ApiClient.Deserialize(localVarResponse, typeof(GetObjectsSuccessResponse)));
        }

    }
}
